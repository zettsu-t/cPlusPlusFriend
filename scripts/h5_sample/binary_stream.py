import os
import cv2
import h5py
import numpy as np
import matplotlib.pyplot as plt


def read_h5_file(h5_filename, node, image_filename):
    """Read an HDF5 file generated by R"""

    expected_image = cv2.imread(image_filename, cv2.IMREAD_UNCHANGED)

    with h5py.File(h5_filename, "r") as h5in:
        image_node = h5in[node][:]
        raw_data = image_node.astype(np.uint8)
        actual_image = cv2.imdecode(raw_data, cv2.IMREAD_UNCHANGED)
        plt.imshow(cv2.cvtColor(actual_image, cv2.COLOR_BGR2RGB))
        plt.show()

        images_equal = np.array_equal(actual_image, expected_image)
        assert images_equal


def create_h5_file(h5_filename, image_filename):
    """Create an HDF5 file"""

    if os.path.exists(h5_filename):
        os.remove(h5_filename)

    with h5py.File(h5_filename, "w") as h5out:
        h5out.create_group("root")
        image_data = np.fromfile(image_filename, dtype='uint8')
        h5out["root"].create_dataset("image", data=image_data)


def main():
    read_h5_file(h5_filename="r.h5", node="top/image",
                 image_filename="blue.png")
    create_h5_file(h5_filename="python.h5",
                   image_filename="orange.png")
    read_h5_file(h5_filename="python.h5", node="root/image",
                 image_filename="orange.png")


if __name__ == "__main__":
    main()
