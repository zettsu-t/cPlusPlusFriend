I wonder why the plural form of day-off is days-off and the plural form of plug-in is plug-ins.
Programmers compare lossless compression to freeze-drying coffee, from-concentrate juice, and futon compression bags.
I get plenty of exercises - move, jump, spin, load, carry, and push in my assembly code.
Walt Disney said, "If you can dream it, you can do it.". Contestants of competitive programming may say "If you can come up with it, you can implement it."
In C and C++, you can replace if(p) { free(p); } with free(p); . free(NULL) does nothing and does not crash. This is a kind of the null object design pattern.
If you wonder some C++ empty structs are defined, leave them untouched and do not bundle them into one struct. They are tags for Boost.MultiIndex.
You may find a comment in C++ code that says "This variable must be unsigned". It is a good practice to write an assertion "static_assert(std::is_unsigned)".
It is a pesky bug that an interrupt handler constructs a C++ object which calls malloc unintentionally. Malloc is not reentrant so the handler rarely corrupts heap. This is hard to reproduce.
T is a function to transpose a matrix in NumPy and t is a function to transpose a matrix in R. Stan has the T operator which is used for truncated data models.
Before writing assert_equals, check their arguments. Google Test and CppUnit take (expected, actual). CUnit and R testthat::expect_equal take (actual, expected). It is troublesome to swap expected and actual values after writing unit tests.
The logo of Boost C++ Libraries uses hexagons like benzene rings. It recalls us that the libraries work well together with the C++ standard library. Tidyverse is a collection of R packages and it also uses hexagons in its logo.
x64 uses SSE registers and x86 uses 80-bit x87 FPU registers in floating-point arithmetic. This occasionally leads to different results of the same calculations.
sizeof(4) is accidentally treated as 4 in many platforms. Do you mean "size_t var = 4;"?
C++ compilers are novelists. They have you read their gargantuan error novels when there's something wrong in C++ code using templates.
An interrupt is like pizza delivery. A driver rings the doorbell, you suspend your programming, and you pick up a pizza box on the floor. Bon app√©tit!
Random seeds are required to reproduce results in some algorithms. You should save seeds or you will have a hard time reproducing the results.
In C++, the 'this' pointer is rarely necessary. It is an example to write explicit 'this'. std::bind(&T::MemberFunction, this, std::placeholders::_1)
It is a bad practice that an int holds a distance of two pointers in C/C++. Use ptrdiff_t and describe "%td" in printf().
When you write a unit test, make it fail first. Otherwise, you wonder if the test passes or is empty or does not run.
It is not easy to parse -1-1e-3 to -1.001.
An advantage of just-in-time compilation over ahead-of-time compilation is generating platform-specific code. I have not written code for AVX-512.
std::ofstreams in C++ automatically close file streams that they opened. This is a typical RAII behavior. Note that if closing a file fails in a destructor of std::ofstream, the destructor tells nothing.
A trick using std::swap() in C++ is to reinitialize a variable by swapping an existing object and a newly created object.
The portability of regular expressions is sometimes a hard thing. I have to rewrite a recursive regex... (sigh
C++ has many unique features. When I am asked to choose one of them, I say C++ does not rely on tracing GC.
In math class, you are taught that 1/0 is not infinity. In R programming, 1/0 returns Inf, and -1/0 returns -Inf.
If you find #* or *~ files in a Windows shared folder, it tells someone opens these files on Emacs directly. By the way, you become happy if you use a version control system instead of shared folders.
Lack of the construct-on-first-use idiom can cause bugs in initializing before main(). Can randomizing an order of a *.o set detect it?
Windows treats file and directory names as case insensitive by default. #include directives in C/C++ do same in compilation under Windows.
R and American building stories have 1-based indexing. C and British building storeys have 0-based indexing.
A famous usage of 'do{}while();' is wrapping multi-statement macros in C/C++. Another is enumerating all permutations of a list. std::sort(vec.begin(), vec.end()); do {...} while(std::next_permutation(vec.begin(), vec.end()));
NOP instructions do not make modern processors idle. They are useful to align instructions.
Bit fields are not always ordered from LSB to MSB. It is platform-dependent and an IPv4 header struct is a good example.
The document of R dplyr::distinct() says it is considerably faster. I would like to use this phrase.
A simple use case does not mean that it is easy to design. "Deposit coins, press a button, and you can get a soda bottle" is correct but it doesn't help you make a vending machine.
A result of positive integer division depends on platforms and computer languages. A dynamic typing language returns a floating-point number if two integers are not divisible.
Programmers are lazy so they count lines of a CSV file with the wc command. Programmers are impatient so they do not launch R or Python and use the shell function below to count columns in a CSV file. 'head foo.csv | sed -e "s/[^\\,]//g" | awk '{ print length + 1 }'
An advantage of C++ constants over macros is finding an undefined symbol. "if constexpr (color)" causes a compilation error if you expect "colour" but "#ifdef COLOR ... #endif" possibly leads to unexpected behaviors without compilation errors.
Automatic memory management relieves programmers' burden but programmers are not free from memory management. Before reading a huge file, you may have to release huge objects or it causes an out-of-memory error.
Someone said, "Any code doesn't run as you thought, run as you wrote". Sure. I say "Tracing GC doesn't collect objects which you thought obsolete, collect unreachable objects".
It is fun for students in CS courses to read "Intel 64 and IA-32 Architectures Software Developer Manuals" and beat C/C++/Rust optimizers.
int* is automatically convertible to const int* in most cases but it is not always true. A std::bad_any_cast exception is thrown if you put an int* into a std::any object and apply std::any_cast<const int*> to it.
There are cases where different technical terms in different fields have the same notion. Markov property is well known as a sunk cost in economics. Hazard rate and force of mortality have a common definition.
The critical path of a project is not obvious. In the construction of the Tokaido shinkansen, I suppose its critical path was digging a 7959m tunnel between Atami and Mishima, not developing trains running at 200 Km/h (125 mph).
I know a capitalization-weighted stock index approximates the stock's value of a sector, region, or country. I wonder what price-weighted stock indices such as DJIA and N225 represent?
Multi-level indexing was known before computers. Keeping Kimarijis in mind is crucial for winning competitive karuta games. Even novices know mu-su-me-fu-sa-ho-se. You can experience Kimarijis on Bash with bash-completion or on a car GPS unit to set a destination.
Haven't you read a patent? Watch Michael Jackson's 'Smooth Criminal' video and read USP 5255452 'Method and means for creating anti-gravity illusion', which he is an inventor of.
I heard the greatest inventor in the world is Patent Pending. The most-cited paper of all time must be "Error! Reference source not found."
Suspension bridges are built from a long time ago but cable-stayed bridges are modern because they require structural analysis. There are many ideas which computers realize and cable-stayed bridges are one of them. Markov chain Monte Carlo (MCMC) methods are also the same.
I heard that I can buy high throughput using parallelism, cannot buy low latency because it is bound by physical constants. Is this a famous maxim?
If trainees are novices in UML, let them draw steps of household chores. We can wash clothes and clean up rooms in parallel.
